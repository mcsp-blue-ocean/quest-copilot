Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![NodeJS](/assets/badge-
nodejs-1432a58382afd13f5bf55d4e5eda07244a3aa5fae9cee98ea034f17d6a09d503.svg)
](/paths/full-stack-javascript/courses/nodejs)

#  Express 103: Routes and Controllers

[

##  NodeJS Course

](https://www.theodinproject.com/paths/full-stack-javascript/courses/nodejs)

### Introduction

The next step in the MDN express tutorial sets up all the routes and
controllers you’re going to need when creating the Library project. This
project is designed using the MVC (Model, View, Controller) architecture. In a
previous step you set up all the Models (or Database Objects) and in the
_next_ step you’ll be setting up several different views.

If you remember from our earlier lessons, the controller is the code that sits
between the models and the views. It determines which view is going to be
shown, as well as which information is going to populate that view. In this
lesson, you will copy and paste quite a bit of repetitive code to get the
controllers and routes set up, but be sure to read everything in between them!
There is a _lot_ of useful information therein.

### Learning outcomes

By the end of this lesson, you should be able to do the following:

  * Create simple routes.
  * Create route-handler callback functions.
  * Create a catalog route module.
  * Describe approaches for structuring routes and controllers.
  * Set up URL endpoints.

### Assignment

  1. Continue where we left off with part 4 of the [Express tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes).

### Knowledge check

This section contains questions for you to check your understanding of this
lesson. If you’re having trouble answering the questions below on your own,
review the material above to find the answer.

  * [How do you define a route function in Express?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes#defining_and_using_separate_route_modules)
  * [Name four HTTP verbs a route might need to handle.](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes#http_verbs)
  * [What is a route parameter, and what syntax is used to define one in a route handler?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes#route_parameters)
  * [What is a route-handler callback function commonly called?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes#create_the_route-handler_callback_functions)

### Additional resources

This section contains helpful links to related content. It isn’t required, so
consider it supplemental.

  * It looks like this lesson doesn’t have any additional resources yet. Help us expand this section by contributing to our curriculum.

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/nodeJS/express_and_mongoose/express_103_routes_and_controllers.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnodejs-
express-103-routes-and-
controllers&template=suggestion.yaml&title=Express+103%3A+Routes+and+Controllers%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/nodejs) [Sign in to track progress](/sign_in) [ Next
lessonGo to next lesson Next Lesson ](/lessons/nodejs-express-104-view-
templates)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

