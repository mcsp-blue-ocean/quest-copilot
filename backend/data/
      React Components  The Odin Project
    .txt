Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![React](/assets/badge-
react-d347c579ca6df9afc0ef4127bb4fe6dc4002be06cb241f4d70b37c412f56cec2.svg)
](/paths/full-stack-javascript/courses/react)

#  React Components

[

##  React Course

](https://www.theodinproject.com/paths/full-stack-javascript/courses/react)

### Introduction

In this lesson we’ll be going over the basics of React components - what they
do, and how to write them. Make sure to use the project you set up in the
previous lesson, but try not to copy and paste any code while you’re coding
along.

### Lesson overview

This section contains a general overview of topics that you will learn in this
lesson.

  * What are components?
  * How are components created?
  * Where do components live?

### What are components?

The beauty of React is that it allows you to break a UI (User Interface) down
into independent reusable chunks, which we will refer to as components. The
following picture should give you an idea of how to do that when building a
very basic app.

[![Component
Example](https://cdn.statically.io/gh/TheOdinProject/curriculum/91485eec76445d86b29d35894e83324e2967f2fb/react/imgs/00.png)](https://cdn.statically.io/gh/TheOdinProject/curriculum/91485eec76445d86b29d35894e83324e2967f2fb/react/imgs/00.png)

For example, this simple website could be broken into the following
components:

  * `App`, which represents your main application and will be the parent of all other components.
  * `Navbar`, which will be the navigation bar.
  * `MainArticle`, which will be the component that renders your main content.
  * `NewsletterForm`, which is a simple form that lets a user input their email to receive the weekly newsletter.

Think of these reusable chunks as JavaScript functions which can take some
kind of input and return a React element.

### How to create components

To get the feel of working with components, we’re going to practice creating
functional components. What are functional components? Javascript functions!
Is it really that simple? Let’s have a look.

    
    
    function Greeting() {
      return <h1>&quot;I swear by my pretty floral bonnet, I will end you.&quot;</h1>;
    }
    

This might look mostly familiar to you - it’s a simple JavaScript function,
which returns JSX. Open up the project you were working on, create a new file
named `Greeting.jsx`, and in that file write your own handmade functional
component. Name it whatever you wish, and have it return whatever JSX you
wish.

Are you done? Check the naming of your function! Is it capitalized? Keep this
key difference in mind. **React components must be capitalized** or they will
not function as expected, which is why we capitalized `Greeting()`.

#### HTML escape code

In the above example, `&quot;` is an escape code we use to render `"`. Your
linter will greet you with an error if you use regular quotes. You can use
[this LambdaTest tool for escaping HTML
characters](https://www.lambdatest.com/free-online-tools/html-escape) if you
run into such errors, or read more about [escape codes on
w3.org](https://www.w3.org/wiki/Common_HTML_entities_used_for_typography)

#### What is HTML doing in my JavaScript?

It’s JSX. It looks jarring at first, but soon we’ll realize how cool it is.
We’ll learn all about it in the upcoming lessons!

### Where do components live

So remember how our component is just hanging out in its own dedicated file?
This makes it independent from the rest of the codebase! That said, while
independence is great, we do want the component to use functionality created
elsewhere, and to share itself with other components. How can we do this?
`import`ing and `export`ing! For a very long time in React development, it was
necessary to `import` React in your JavaScript files that used React
components, but since React v17.0 it is no longer required. Let’s simply
`export` our newly created component so that parent components can use it as a
child throughout your project.

    
    
    function Greeting() {
      return <h1>&quot;I swear by my pretty floral bonnet, I will end you.&quot;</h1>;
    }
    
    export default Greeting;
    

Are we done? Well let’s think about this - we’ve declared our component, and
exported it, but does `main.jsx` know about it yet? Nope! Let’s fix that.
Let’s look at `main.jsx`, we can see that `render()` is rendering the `App`
component. Let’s replace that `App` component with our newly created greeting,
which we’ll have to make sure is first imported properly. The end result
should look something like this:

    
    
    import React from 'react'
    import ReactDOM from 'react-dom/client'
    import App from './App.jsx'
    import Greeting from './Greeting.jsx'
    import './index.css'
    
    ReactDOM.createRoot(document.getElementById('root')).render(
      <React.StrictMode>
        <Greeting />
      </React.StrictMode>,
    )
    

Remember that `<Greeting />` should be capitalized! Try using lower case for
the import, function name and component and see what happens! When the JSX is
parsed, React uses the capitalization to tell the difference between an HTML
tag and an instance of a React component - `<greeting />` is not a valid HTML
tag!

Otherwise, just like that, you’ve successfully imported and used your first
custom-made component, congratulations!

### Assignment

  1. It’s time to create some new components! Use the same project, but play around with it, try displaying something like your favorite food. 
    * While components normally get exported as defaults, try using some named exports instead of default exports. If you’re unsure how to do this, consult your best friend: [the MDN documentation about export statements](https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export#description)

### Knowledge check

This section contains questions for you to check your understanding of this
lesson on your own. If you’re having trouble answering a question, click it
and review the material it links to.

  * What does a React element look like?
  * How would you create a functional component?
  * How do you export and then import a component?

### Additional resources

This section contains helpful links to related content. It isn’t required, so
consider it supplemental.

  * Geeks for Geeks has a quick [ReactJS Functional Components tutorial](https://www.geeksforgeeks.org/reactjs-functional-components/). It introduces some new ways of calling functional components you can play around with if you feel a burning desire to do so. For the time being don’t worry too much about Class components, which the resource also goes into.

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/react/getting_started_with_react/react_components.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnode-path-react-new-
react-
components&template=suggestion.yaml&title=React+Components%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/react) [Sign in to track progress](/sign_in) [ Next
lessonGo to next lesson Next Lesson ](/lessons/node-path-react-new-what-is-
jsx)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

