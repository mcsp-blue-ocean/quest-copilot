Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![Ruby](/assets/badge-
ruby-d91c1849066ed424531394e9d693dd99aaef49bcee15a96f462a1ae54c359af0.svg)
](/paths/full-stack-ruby-on-rails/courses/ruby)

#  Project: Ruby Final Project

[

##  Ruby Course

](https://www.theodinproject.com/paths/full-stack-ruby-on-rails/courses/ruby)

### You’ve come a long way. Now it’s time to prove how much you’ve learned

Chess is a classic game that appears very complicated at first but can be
broken down into logical steps that make it a great Ruby capstone project. If
you’ve never played, be sure to read up on the rules (see the [Wikipedia
Page](http://en.wikipedia.org/wiki/Chess)) first.

The problem specification is deliberately sparse for this, your final project
of Ruby – it’s up to you to attack the problem with very little prior
information or structure, which is good practice for real world programming
challenges. You have all the tools you need. You already did a lot of the
heavy thinking in the [Knight’s Travails
project](https://www.theodinproject.com/lessons/ruby-knights-travails).

The main difference is that this problem has the broadest scope of anything
you’ve done yet. The keys here will be thinking it through logically ahead of
time and maintaining a disciplined workflow. It’ll be much easier on you if
you’re able to stay organized and break it down into components that you can
tackle one by one.

This is a great project to have as a part of your portfolio going forward
because it shows you can take on something with a lot of different components
to it.

### Assignment

  1. **Build a command line Chess game where two players can play against each other.**
  2. The game should be properly constrained – it should prevent players from making illegal moves and declare check or check mate in the correct situations.
  3. Make it so you can save the board at any time (remember how to serialize?)
  4. Write tests for the important parts. You don’t need to TDD it (unless you want to), but be sure to use RSpec tests for anything that you find yourself typing into the command line repeatedly.
  5. Do your best to keep your classes modular and clean and your methods doing only one thing each. This is the largest program that you’ve written, so you’ll definitely start to see the benefits of good organization (and testing) when you start running into bugs.
  6. Unfamiliar with Chess? Check out some of the additional resources to help you get your bearings.
  7. Have fun! Check out the [unicode characters](http://en.wikipedia.org/wiki/Chess_symbols_in_Unicode) for a little spice for your gameboard.
  8. (Optional extension) Build a very simple AI computer player (perhaps who does a random legal move)

### Additional resources

This section contains helpful links to other content. It isn’t required, so
consider it supplemental.

  * [Illustrated rules of Chess](http://www.chessvariants.org/d.chess/chess.html)
  * [Chess notation for humans and computers](https://en.wikipedia.org/wiki/Chess_notation)
  * If you’re feeling stuck, you should visit the community Discord!
  * You don’t need this… resist the temptation! Here is [a discussion of this problem from RubyQuiz](http://rubyquiz.com/quiz35.html). Be warned, this resource contains a blueprint for how to complete this project. That means, if you decide to peruse it, you won’t get the opportunity to dig into this problem.

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/ruby/conclusion/project_ruby_final.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fruby-ruby-final-
project&template=suggestion.yaml&title=Ruby+Final+Project%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

Only logged in users can view user submissions for this project

[ View courseGo to course page View Course ](/paths/full-stack-ruby-on-
rails/courses/ruby) [Sign in to track progress](/sign_in) [ Next lessonGo to
next lesson Next Lesson ](/lessons/ruby-conclusion)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

