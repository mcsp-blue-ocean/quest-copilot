Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![JavaScript](/assets/badge-
javascript-626af7075a7914bc4f30bd941268ed883785c3fb29b3e9d023eb5ab6450353bb.svg)
](/paths/full-stack-javascript/courses/javascript)

#  Testing Basics

[

##  JavaScript Course

](https://www.theodinproject.com/paths/full-stack-
javascript/courses/javascript)

### Introduction

Test Driven Development, or TDD for short, is a _big_ deal in the modern
development landscape. This is a concept that we introduced way back in our
Fundamentals section with our JavaScript Exercises. The main idea is simply
that you start working on your code by writing automated tests _before_
writing the code that is being tested. There are tons of benefits to working
like this, all of which will be discussed in the resources below.

There are many test-running systems available in JavaScript:
[Mocha](https://mochajs.org/), [Jasmine](https://jasmine.github.io/),
[Tape](https://github.com/substack/tape) and [Jest](https://jestjs.io/) to
name a few. Fortunately, the syntax for each one is very similar. They all
have their own set of special features, but the basic syntax is almost
identical, so in the end it doesn’t matter which one you use. In fact, simply
picking which library to use for this curriculum has been quite tricky!

This lesson is going to center around **Jest**. The biggest reasons for this
decision are that one of the best resources we’ve found for explaining
JavaScript testing uses it and they have fantastic documentation. In the end,
writing tests is less about the syntax and more about the TDD philosophy. The
most important issues are knowing **why** we write tests and **what** we test
rather than how.

### Lesson overview

This section contains a general overview of topics that you will learn in this
lesson.

  * Explain the basics of TDD.
  * Get up and running with Jest.
  * Write basic tests.

### Assignment

  1. [Read this short article](https://web.archive.org/web/20211123190134/http://godswillokwara.com/index.php/2016/09/09/the-importance-of-test-driven-development/) that outlines the basic process and the benefits of TDD.
  2. Watch at least the first 3 videos of [this video series](https://www.youtube.com/playlist?list=PL0zVEGEvSaeF_zoW9o66wa_UCNE3a7BEr) about testing in JavaScript. The first video focuses heavily on the WHY, while the next two go into more depth about the process. Later videos in the series are _definitely_ worthwhile, but the first 3 are enough to get you up and running.
  3. Read and follow the [Getting Started](https://jestjs.io/docs/getting-started) tutorial on the main Jest website.
  4. Read and follow the [Using Matchers](https://jestjs.io/docs/using-matchers) document on the main Jest website. This one demonstrates some of the other useful functions you can use in your tests.

### Knowledge check

This section contains questions for you to check your understanding of this
lesson on your own. If you’re having trouble answering a question, click it
and review the material it links to.

  * [What are the benefits of TDD?](https://web.archive.org/web/20211123190134/http://godswillokwara.com/index.php/2016/09/09/the-importance-of-test-driven-development/)
  * [What are some common jest matchers?](https://jestjs.io/docs/using-matchers#common-matchers)

### Additional resources

This section contains helpful links to related content. It isn’t required, so
consider it supplemental.

  * It looks like this lesson doesn’t have any additional resources yet. Help us expand this section by contributing to our curriculum.

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/javascript/testing_javascript/testing_basics.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnode-path-javascript-
testing-
basics&template=suggestion.yaml&title=Testing+Basics%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/javascript) [Sign in to track progress](/sign_in) [ Next
lessonGo to next lesson Next Lesson ](/lessons/node-path-javascript-testing-
practice)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

