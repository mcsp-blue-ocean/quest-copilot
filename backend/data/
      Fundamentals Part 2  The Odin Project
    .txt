Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![Foundations](/assets/badge-
foundations-4a1f6ae4009e6156a289aef0a3897283ff0e3fe1af6b5795aaf7260619dc11f4.svg)
](/paths/foundations/courses/foundations)

#  Fundamentals Part 2

[

##  Foundations Course

](https://www.theodinproject.com/paths/foundations/courses/foundations)

### Introduction

There are a few extremely common types of data that you will encounter in
JavaScript, and these lessons on the fundamentals will give you a really
strong foundation in all of them. However, before we start digging deep, [this
article](http://javascript.info/types) will provide you with a quick overview
of the most common ones.

### Lesson overview

This section contains a general overview of topics that you will learn in this
lesson.

  * Name the eight data types in JavaScript.
  * Understand the difference between single, double, and backtick quotes.
  * Embed a variable/expression in a string.
  * Understand what a method is.
  * Name the three logical operators.
  * Understand what the comparison operators are.
  * Understand what conditionals are.
  * Understand what nesting is.
  * Understand what truthy and falsy values are.

### Strings

Depending on what kind of work you’re doing, you might end up working more
with pieces of text rather than numbers. A **string** is simply a piece of
text… and is a fundamental building block of the language.

  1. Read and code along with [yet another MDN tutorial](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings) on the topic.
  2. Go through [this lesson](https://www.w3schools.com/js/js_string_methods.asp) to learn a bit more about what you can do with strings… be sure to take a peek at [the String Reference](https://www.w3schools.com/jsref/jsref_obj_string.asp) page near the bottom, and do the exercises at the end!
  3. Vocabulary time: a **method** is a bit of functionality built into the language or specific data types. In [the previous W3Schools exercise](https://www.w3schools.com/js/js_string_methods.asp), you’ve learned about a few methods that can be used on strings, such as `replace` and `slice`. An exhaustive list of methods usable on strings can be found [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String).

### Conditionals

Now it’s time for the fun stuff… So far, we haven’t done much with our
programming that you couldn’t do with simple math skills. Sure, we’ve told our
computer how to do the math, which makes it quicker, but the essence of
programming is teaching the computer how to make decisions to do more involved
things. Conditionals are how we do that.

  1. Step one in learning about conditionals is making sure you have a good grasp on [comparisons](http://javascript.info/comparison).
  2. [This tutorial](https://www.w3schools.com/js/js_if_else.asp) is a great first glance at conditionals in JavaScript.
  3. [This tutorial](http://javascript.info/logical-operators) will teach you about logical operators. A little heads up regarding this reading’s tasks: there will be questions where you see `alert()` with a number or string inside the parenthesis. What’s happening here will be discussed later in the curriculum. Some of the answers may not make sense now, but they are accurate, and you will understand them as you progress in the curriculum. Don’t worry too much about it now!
  4. [This article](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/conditionals) reinforces the concept and provides several interesting examples of how you could use it building websites.
  5. [This article](http://javascript.info/ifelse) covers the same basic concept (read through it as a review!) and - more importantly - offers the usual ‘tasks’ at the bottom of the page!
  6. [This article](https://javascript.info/switch) teaches you about the `switch` statement, which is handy when you have multiple conditions.

### Assignment

To give you a good bit of practice, we have created replit.com exercises for
you to play with. We believe it’s best to practice programming on your _own_
computer rather than in an online environment, but we’ll get to that soon
enough.

Be sure to do the lessons in the order presented here. Pressing “run” at the
top will run the code. Read all directions, watch the terminal, and read all
the errors. Don’t forget to use ‘console.log’ extensively.

To get started, create a free replit account and click “Fork” or “Remix” to
access the exercises. Note: Feel free to browse the files on the left column
to gain familiarity with it.

#### Replit and AI

Replit recently introduced an AI assistant, which is on by default. Before
trying any of the exercises, you should first disable it, in order to prevent
it from spoiling the exercise. You can do so by clicking on the button labeled
AI in the bottom left corner of the code view and then unchecking the "Enable"
checkbox.

  * [Exercise 1](https://replit.com/@OdinProject/troubleshooting#troubleshooting.js)
    * In this exercise, you will be working out of the file called troubleshooting.js
  * [Exercise 2](https://replit.com/@OdinProject/enter-a-number#script.js)
    * You will be working out of script.js, and you will use the console in the ‘webview’ pane to check your work. To access the console, click the wrench icon, which is located on the right side of the address bar within the ‘webview’ pane.
  * [Exercise 3](https://replit.com/@OdinProject/lets-do-some-math#math.js)
    * You will be working out of math.js
  * [Exercise 4](https://replit.com/@OdinProject/direction-follow#follow.js)
    * You will be working out of follow.js

### Knowledge check

This section contains questions for you to check your understanding of this
lesson on your own. If you’re having trouble answering a question, click it
and review the material it links to.

  * [What are the eight data types in JavaScript?](https://javascript.info/types#summary)
  * [Which data type is NOT primitive?](https://javascript.info/types#objects-and-symbols)
  * [What is the relationship between null and undefined?](https://javascript.info/types#the-null-value)
  * [What is the difference between single, double, and backtick quotes for strings?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings#single_quotes_double_quotes_and_backticks)
  * [What is the term for joining strings together?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings#embedding_javascript)
  * [Which type of quote lets you embed variables/expressions in a string?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings#embedding_javascript)
  * [How do you embed variables/expressions in a string?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings#embedding_javascript)
  * [How do you use escape characters in a string?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings#including_quotes_in_strings)
  * [What is the difference between the slice/substring/substr string methods?](https://www.w3schools.com/js/js_string_methods.asp)
  * [What are the three logical operators, and what do they stand for?](http://javascript.info/logical-operators)
  * [What are the comparison operators?](https://javascript.info/comparison)
  * [What are truthy and falsy values?](https://javascript.info/ifelse#boolean-conversion)
  * [What are the falsy values in JavaScript?](https://javascript.info/ifelse#boolean-conversion)
  * [What are conditionals?](https://www.w3schools.com/js/js_if_else.asp)
  * [What is the syntax for an if/else conditional?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/conditionals#basic_if...else_syntax)
  * [What is the syntax for a switch statement?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/conditionals#switch_statements)
  * [What is the syntax for a ternary operator?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/conditionals#ternary_operator)
  * [What is nesting?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/conditionals#nesting_if...else)

### Additional resources

This section contains helpful links to other content. It isn’t required, so
consider it supplemental.

  * [Regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions), commonly known as regex, is a tool that matches or locates patterns in strings for string validation. However, it’s important to know [when you shouldn’t use regular expressions](https://softwareengineering.stackexchange.com/questions/113237/when-you-should-not-use-regular-expressions). There are other various methods to process strings, and regex can be slower in comparison. 
    * [Web Dev Simplified’s Regular Expressions In 20 Minutes](https://www.youtube.com/watch?v=rhzKDrUiJVk)

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/foundations/javascript_basics/fundamentals-2.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Ffoundations-
fundamentals-
part-2&template=suggestion.yaml&title=Fundamentals+Part+2%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course
](/paths/foundations/courses/foundations) [Sign in to track
progress](/sign_in) [ Next lessonGo to next lesson Next Lesson
](/lessons/foundations-javascript-developer-tools)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

