Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![React](/assets/badge-
react-d347c579ca6df9afc0ef4127bb4fe6dc4002be06cb241f4d70b37c412f56cec2.svg)
](/paths/full-stack-javascript/courses/react)

#  Project: CV Application

[

##  React Course

](https://www.theodinproject.com/paths/full-stack-javascript/courses/react)

### Introduction

Congratulations, you have made it to the very first React project. In this
project, you will be creating a small CV application. It’s a great project to
get you started because it includes many of the basic concepts you’ve learned
so far, without a huge overhead of complexity.

### Assignment

  1. Create a new React project.
  2. Think about how to structure your application into components. Your application should include: 
    1. A section to add general information like name, email and phone number.
    2. A section to add your educational experience (school name, title of study and date of study)
    3. A section to add practical experience (company name, position title, main responsibilities of your jobs, date from and until when you worked for that company)
  3. Be sure to include an edit and submit button for each section or for the whole CV. The submit button should submit your form and display the value of your input fields in HTML elements. The edit button should add back (display) the input fields, with the previously displayed information as values. In those input fields, you should be able to edit and resubmit the content. You’re going to make heavy use of state and props, so make sure you understood those concepts.
  4. Create a `components` directory under your `src` directory and add your components.
  5. Include a `styles` directory under your `src` directory for your CSS files. You’ll need to import these in the component files to use them.
  6. Push the results and deploy them with any of the options mentioned below!

### Deploying a React app

While we have been using GitHub Pages to deploy our **static webpages** till
now, and we can definitely continue to do so with hacky ways, it’s far easier
to let a PaaS (Platform as a Service) do the same for us! There are a lot of
options to host such sites, and the [Vite hosting
docs](https://vitejs.dev/guide/static-deploy.html) go over the most popular
ones among them.

Not only do some of these get rid of additional steps after pushing our code
to GitHub as these services have tools that automatically _deploy on push_ ,
but you also don’t have to worry about other issues further down the
curriculum, like routers and build steps. We shall use a few selected options
for now. Once you are done with the assignment, choose one of the following
options, and deploy!

* * *

### Netlify

While there are many ways to deploy to Netlify, like uploading your `dist`
directly or using [Netlify’s `netlify-cli`](https://docs.netlify.com/cli/get-
started/) CLI, the most convenient way would be to directly import your GitHub
repository to Netlify.

  1. Push your React application to GitHub.
  2. [Import your project](https://app.netlify.com/start) to Netlify by logging in, and selecting your repository.
  3. Select the branch to deploy from (the default setting, from `main`, works) and hit “Deploy site”!
  4. You can access more settings here if you need to!

#### Links

  * [Homepage](https://www.netlify.com/)
  * [Documentation Website](https://docs.netlify.com/)
  * [This section of the Vite docs](https://vitejs.dev/guide/static-deploy.html#netlify-with-git) has a similar brief guide for deployment

* * *

### Vercel

Similar to Netlify, Vercel also offers a few ways to deploy, but we will be
importing our GitHub repository to get benefits like deploy-on-push.

  1. Again, push your React application to GitHub.
  2. [Import your project](https://vercel.com/new) to Vercel.
  3. Vercel will automatically detect that you are using Vite. Set your name as you like, and hit “Deploy”!

#### Links

  * [Homepage](https://www.vercel.com/)
  * [Documentation Website](https://www.vercel.com/docs)

* * *

### Cloudflare pages

  1. Yes, push your React application to GitHub.
  2. Create a new Cloudflare account and log into it.
  3. Under “Account Home”, select “Workers & Pages” > “Pages” > “Connect to Git”.
  4. Connect to GitHub and select your GitHub repository.
  5. Under “Set up builds and deployments”, set `npm run build` as the build command, and `dist` as the build output directory.
  6. Under “Environment variables (advanced)” > “Add variable”, add a variable named `NODE_VERSION` and set its value to be the version number of Node that you are using. You can find this by executing `node -v` in your terminal.
  7. Hit “Save and Deploy” and watch it come to life!

#### Links

  * [Homepage](https://pages.cloudflare.com/)
  * [Documentation Website](https://developers.cloudflare.com/pages)
  * [This section in the Cloudflare docs](https://developers.cloudflare.com/pages/framework-guides/deploy-a-vite3-project/) discusses these very steps

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/react/states_and_effects/project_cv_application.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnode-path-react-new-cv-
application&template=suggestion.yaml&title=CV+Application%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

Only logged in users can view user submissions for this project

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/react) [Sign in to track progress](/sign_in) [ Next
lessonGo to next lesson Next Lesson ](/lessons/node-path-react-new-how-to-
deal-with-side-effects)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

