Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![Advanced HTML and CSS](/assets/badge-html-
css-91bc8d9c7ebb2e2f73eeb302c38a92d9ba6f182301dbd1868d7198fcc8376aeb.svg)
](/paths/full-stack-javascript/courses/advanced-html-and-css)

#  Accessibility Auditing

[

##  Advanced HTML and CSS Course

](https://www.theodinproject.com/paths/full-stack-javascript/courses/advanced-
html-and-css)

### Introduction

Now that you are equipped with the necessary knowledge to make your websites
more accessible to many users, the question arises: How can we verify the
correct implementation of a11y features? Are there any mistakes to be
corrected, or potential improvements to be made? In this lesson, we will
answer those questions to help push your a11y skills over the top.

### Learning outcomes

By the end of this lesson, you should be able to:

  * Open the accessibility section within your browser’s DevTools.
  * Audit a web page with a third-party auditing tool.

### Accessibility DevTools

Using your browser’s DevTools is beyond useful for several things, from
checking the styles applied to a page to debugging code, but you already know
that! Here’s something you may not know: you can even use the DevTools to look
at various accessibility features as well, which can be great as a sort of
“quick audit”. You can check contrast ratios (as we mentioned in a previous
lesson), view various accessibility properties, and view the accessibility
tree, to name a few features.

### Accessibility auditing

There are plenty of third-party tools to audit the accessibility of a web
page, each with its own pros and cons. Here, we’re only going to mention three
of those tools. By getting into the habit of auditing your web pages, you’ll
be able to track down any outstanding a11y issues that you may have missed.
Whether you decide to utilize one of these tools or any other auditing tool
you prefer, you should only focus on fixing issues related to the concepts
introduced in this portion of the curriculum for now.

  * [axe DevTools for Chrome](https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US) is an extension-based tool that returns a list of issues ranked by severity level, and will note any issues for you to manually check.

  * [Lighthouse for Chrome](https://developers.google.com/web/tools/lighthouse) is available in the Chrome DevTools by default (it might also be listed as the Auditing tab) or it can be run from the command line. Lighthouse provides more than just a11y auditing, including performance, best practices, search engine optimization (SEO), and progressive web app (PWA) if applicable. Issues are separated by category, and like the axe DevTools, there may be a list of issues for you to manually check.

  * [WebAIM’s WAVE](https://wave.webaim.org/) is a website-based tool where you enter the URL of the page you want to audit. There are also browser extensions and API options. WAVE will return a preview of the page with an overlay of icons on it, and issues are separated into categories of alerts, warnings, and contrast errors. Unfortunately, the icons that are placed on the page may cause the layout to break, but that could be a minor issue if you’re more focused on the a11y issues that are found.

Of course, one of the best ways to check the accessibility of your websites is
to get feedback from users who rely on these accessibility features. This
isn’t always an easy option, but it’s worth hearing from those who may be
affected by your site’s accessibility (or lack of it).

### Assignment

  1. Read the following resources: 
    * [Accessibility features reference](https://developer.chrome.com/docs/devtools/accessibility/reference/#pane), starting from the Accessibility pane section, provides a brief overview of Chrome’s accessibility features in the DevTools.
    * [Emulate vision deficiencies](https://developer.chrome.com/blog/new-in-devtools-83/#vision-deficiencies) from the Chrome 83 update page.
    * The [Open the Issues tab](https://developer.chrome.com/docs/devtools/issues/#open) section. You can ignore any mentions of anything that isn’t accessibility-related on this page, as we just want you to know how to open this tab in your DevTools. Once you do, you’ll be able to see a11y issues in addition to any other issues found.
    * Although there will be differences between different browsers, such as the value of the role property or how a11y properties are presented, check out [the “Features of the Accessibility panel” section in MDN’s documentation](https://firefox-source-docs.mozilla.org/devtools-user/accessibility_inspector/index.html#features-of-the-accessibility-panel). There is useful information that, while more tailored to Firefox, may still be useful for Chrome users.

### Knowledge check

This section contains questions for you to check your understanding of this
lesson. If you’re having trouble answering the questions below on your own,
review the material above to find the answer.

  * [What are some of the various accessibility features available in your browser’s DevTools?](https://developer.chrome.com/docs/devtools/accessibility/reference/#pane)
  * Which third-party accessibility auditing tool is available in the Chrome DevTools by default?

### Additional resources

This section contains helpful links to other content. It isn’t required, so
consider it supplemental.

  * [Involving Users in Evaluating Web Accessibility](https://www.w3.org/WAI/test-evaluate/involving-users/) goes over some helpful steps to take when you can get feedback from users.
  * The [WCAG Quick Reference](https://www.w3.org/WAI/WCAG21/quickref/) provides a list of success criteria along with techniques for how to satisfy them and links to understanding them in more detail. This tool is a great go-to when you’re really ready to push your website to the next accessible level. If you often use animations, success criterion 2.2.2 (“Play, Stop, Hide”) and all of the 2.3 success criteria are definitely worth reading.
  * [A11ycasts Playlist](https://www.youtube.com/playlist?list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g). We’ve included several videos from this playlist in these lessons, but there are other videos worth checking out for various accessibility topics.
  * [screenreader-outputs](https://github.com/thatblindgeye/screenreader-outputs) is a GitHub repo that contains many examples of screen reader outputs. Sometimes nested elements or certain combinations of attributes and native labeling may result in accessible names or descriptions that are difficult to make sense of, so checking out this repo may help clear things up.

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/advanced_html_css/accessibility/accessibility_auditing.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnode-path-advanced-html-
and-css-accessibility-
auditing&template=suggestion.yaml&title=Accessibility+Auditing%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/advanced-html-and-css) [Sign in to track
progress](/sign_in) [ Next lessonGo to next lesson Next Lesson
](/lessons/node-path-advanced-html-and-css-introduction-to-responsive-design)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

