Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![NodeJS](/assets/badge-
nodejs-1432a58382afd13f5bf55d4e5eda07244a3aa5fae9cee98ea034f17d6a09d503.svg)
](/paths/full-stack-javascript/courses/nodejs)

#  Introduction to Express

[

##  NodeJS Course

](https://www.theodinproject.com/paths/full-stack-javascript/courses/nodejs)

### Introduction

In the previous lessons, you got up and running with Node. You learned how to
serve up a multi-page website and read/write data from files on the server.
You probably found that while it wasn’t too difficult, the code was verbose
and a little complicated. However, you can easily see how complicated and hard
to maintain things would get if you decided to start adding more features.
[Express](https://expressjs.com/) is a tiny and simple framework that makes
the things you did in the previous lessons even quicker and simpler, and does
so in a way that makes projects even more easily extensible.

In this section, we are going to be following the [express
tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-
side/Express_Nodejs) on MDN. We’ll go one lesson at a time, occasionally
supplementing with a little deeper explanation or side projects to help you
deepen your understanding of the material. There is a _ton_ of information
there, so be sure to take your time and READ EVERYTHING. The blue “notes” that
are scattered throughout the tutorial often link to articles or other
tutorials that will definitely improve your understanding of the content.
Don’t be lazy!

### Learning outcomes

By the end of this lesson, you should be able to do the following:

#### Express web framework

  * Describe Express and Node’s main benefits.
  * Describe the relationship between Node and Express.
  * Explain what a module is and how Express fits in.
  * Import and create modules.
  * Describe asynchronous APIs.
  * Describe and create route handlers.
  * Describe and use middleware.
  * Describe error handling in Express.
  * Describe what the main parts of an Express app might look like.

#### Setting up a Node development environment

  * Describe Express development environment.
  * Import Express into an application using NPM.
  * Create and run applications using the Express application generator tool.
  * Set up a development environment for Express on your computer.

### Assignment

  1. Read the [introductory lesson](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction) on the MDN website. It is long but its main purpose is to show you the various bits and pieces that you’ll be learning in the rest of the tutorial. If you want you can code along a bit, but most of the examples aren’t really intended for you to follow 100%. _DO_ read the entire thing! Some of it will be a review, but that’s OK! Follow the links that they give and at least look at them. They are a vital part of this lesson and will often direct you to the relevant portion of the official express docs (which are quite good)! You’ll want to be somewhat familiar with them when it comes time to do your own projects.
  2. The [second lesson in MDN’s Express tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment#using_npm) walks you through setting up Node and NPM. If you’ve come this far, you should already have both set up. Still go through the Using NPM and Installing the Express Application Generator sections of this lesson as you’ll learn more about installing and getting started with Express.
  3. Once you’re all set up, take a look at the simple Node site you created in our first project. Rewrite it using express! You should be able to do this with just one app.js file and a few `app.get()`s.

### Additional resources

This section contains helpful links to other content. It isn’t required, so
consider it supplemental.

  * The book [Express in Action](https://www.manning.com/books/express-in-action?a_bid=fe3fcff7&a_aid=express-in-action) by Evan M. Hahn is an incredible resource for Express beginners.
  * [This](https://www.youtube.com/watch?v=L72fhGm1tfE) video crash course provides you with all the basic concepts.
  * Web Dev Simplified’s [Express JS crash course](https://www.youtube.com/watch?v=SccSCuHhOw0&ab_channel=WebDevSimplified) also packs a ton of great information into a 35 minute video.

### Knowledge check

This section contains questions for you to check your understanding of this
lesson. If you’re having trouble answering the questions below on your own,
review the material above to find the answer.

  * [What is Express?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction#introducing_express)
  * [What is a module?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction#importing_and_creating_modules)
  * [Which are the four most used methods to define route handlers?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction/#creating_route_handlers)
  * [How do we handle errors?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction/#handling_errors)
  * [How do you use the Express library with NPM in a project?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment#adding_dependencies)

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/nodeJS/express_and_mongoose/introduction_to_express.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnodejs-introduction-to-
express&template=suggestion.yaml&title=Introduction+to+Express%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/nodejs) [Sign in to track progress](/sign_in) [ Next
lessonGo to next lesson Next Lesson ](/lessons/nodejs-express-101)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

