Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![NodeJS](/assets/badge-
nodejs-1432a58382afd13f5bf55d4e5eda07244a3aa5fae9cee98ea034f17d6a09d503.svg)
](/paths/full-stack-javascript/courses/nodejs)

#  Introduction to Frameworks

[

##  NodeJS Course

](https://www.theodinproject.com/paths/full-stack-javascript/courses/nodejs)

### Introduction

Programmers, the best of whom are pretty lazy folk (in a good way), got tired
of having to write the same code over and over and over again just to cover
the basic tasks that they wanted their applications to perform. So they
batched that recycled code together and called it a framework.

In addition to preventing repetition, frameworks provide great organization.
They tend to force you to organize your files and code in a way that keeps it
highly modular and really clean. When you start a new app with any framework,
you’re given dozens of folders already organized in a hierarchy which makes
sense and follows good practice such as Model-View-Controller (MVC) separation
principles. It’s not quite “color-by-numbers” for code, but it certainly keeps
things ordered.

There are often several different popular frameworks for a given language.
They can have exciting names like [Ember](http://emberjs.com/),
[Meteor](http://www.meteor.com/), [Django](https://www.djangoproject.com/),
[Rails](http://rubyonrails.org/), [Grok](http://grok.zope.org/), etc.
Wikipedia has a [comprehensive comparison of
frameworks](http://en.wikipedia.org/wiki/Comparison_of_web_application_frameworks)
that should give you an appreciation of the number of them. For Ruby alone,
though Rails is the most popular, there are also
[Sinatra](http://www.sinatrarb.com/) and [Padrino](http://www.padrinorb.com/)
and more.

### Lesson overview

This section contains a general overview of topics that you will learn in this
lesson.

  * What is a framework?
  * What’s the difference between a programming language and a framework?

### Assignment

  1. Get introduced to frameworks by reading this brief article from [Dev.to](https://dev.to/aspittel/what-is-a-web-framework-and-why-should-i-use-one-38c0).
  2. Glance over [this article](https://rubygarage.org/blog/technology-stack-for-web-development) from RubyGarage or [this description](https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Web_frameworks) from Mozilla’s website to understand some of the thought process that goes into picking a framework.

### Knowledge check

This section contains questions for you to check your understanding of this
lesson on your own. If you’re having trouble answering a question, click it
and review the material it links to.

  * [What problems do frameworks solve?](https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Web_frameworks#what_can_a_web_framework_do_for_you)
  * [Name some popular front-end and back-end frameworks.](https://dev.to/aspittel/what-is-a-web-framework-and-why-should-i-use-one-38c0)
  * [Describe the process of choosing a framework.](https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Web_frameworks#how_to_select_a_web_framework)

### Additional resources

This section contains helpful links to related content. It isn’t required, so
consider it supplemental.

  * It looks like this lesson doesn’t have any additional resources yet. Help us expand this section by contributing to our curriculum.

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/shared/the_back_end/introduction_to_frameworks.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnodejs-introduction-to-
frameworks&template=suggestion.yaml&title=Introduction+to+Frameworks%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/nodejs) [Sign in to track progress](/sign_in) [ Next
lessonGo to next lesson Next Lesson ](/lessons/nodejs-introduction-what-is-
nodejs)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

