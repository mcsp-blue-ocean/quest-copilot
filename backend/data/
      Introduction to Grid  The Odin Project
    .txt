Close sidebar

[ Odin Logo ](/)

[ Home icon Home ](/) [ All Paths icon All Paths
](https://www.theodinproject.com/paths) [ About icon About ](/about) [ Support
Us icon Support Us ](/support_us) [ Community icon Community
](https://discord.gg/fbFCkYabZB)

* * *

[ Get started icon Get started ](/sign_up) [ theme icon Light mode
](/themes?theme=dark) [ Sign in icon Sign in ](/sign_in)

[ ![Odin Logo](/assets/icons/odin-
icon-a34029cd84a741be4da27758dafd7d7ac3729021adea3e0701e310d91e5c1d04.svg)
](/) [ Odin Logo ](/)

[All Paths](https://www.theodinproject.com/paths) [About](/about)
[Community](https://discord.gg/fbFCkYabZB) [Support us](/support_us) [Sign
in](/sign_in) [ theme icon ](/themes?theme=dark) [Get Started](/sign_up)

Open mobile menu Open mobile menu button

[ ![Intermediate HTML and CSS](/assets/badge-html-
css-91bc8d9c7ebb2e2f73eeb302c38a92d9ba6f182301dbd1868d7198fcc8376aeb.svg)
](/paths/full-stack-javascript/courses/intermediate-html-and-css)

#  Introduction to Grid

[

##  Intermediate HTML and CSS Course

](https://www.theodinproject.com/paths/full-stack-
javascript/courses/intermediate-html-and-css)

### Introduction

Over the next few lessons we will cover CSS Grid and make page layouts much
easier. First we’ll take a quick look back at Flexbox (remember Flexbox!?) and
then learn about Grid.

The following lessons will show you how to create a grid, position grid items
and use some advanced properties. Then we will take a deeper look between
Flexbox and Grid. Ultimately we are working towards building a dashboard
project using Grid.

### Learning outcomes

By the end of this lesson, you should be able to:

  * Compare the basics between Flexbox and Grid
  * Describe a situation for using Grid over Flexbox

### A look back at flex

In the Foundations course you learned a lot about Flexbox. If you’ve been
using Flex here and there along the way, this section will be a quick
refresher before we get into Grid. If you’re completely lost on Flex, then it
might be helpful to go back through the [Flex
lessons](https://www.theodinproject.com/lessons/foundations-introduction-to-
flexbox) again to get up to speed.

The Flex lessons covered positioning items along the two
[axes](https://www.theodinproject.com/lessons/foundations-axes) (main and
cross) and how to set their
[alignment.](https://www.theodinproject.com/lessons/foundations-alignment) You
also learned how to make your flex items [grow, shrink or change their
size.](https://www.theodinproject.com/lessons/foundations-growing-and-
shrinking) This is the real beauty of Flexbox as items can, well, “flex” to
stretch out or shrink down.

You’ll remember you can line up a nice row of flex items like this:

See the Pen [ Single Row | CSS
Flexbox](https://codepen.io/TheOdinProjectExamples/pen/XWeJbRy) by
TheOdinProject
([@TheOdinProjectExamples](https://codepen.io/TheOdinProjectExamples)) on
[CodePen](https://codepen.io).

Or a column like this:

See the Pen [ Single Column | CSS
Flexbox](https://codepen.io/TheOdinProjectExamples/pen/MWEYwoX) by
TheOdinProject
([@TheOdinProjectExamples](https://codepen.io/TheOdinProjectExamples)) on
[CodePen](https://codepen.io).

For one-dimensional layouts, Flex offers a convenient tool without having to
rely on floats or CSS hacks to align your items properly.

For two-dimensional layouts, you learned a little bit about `flex-wrap`, which
allows you to take your flex items and wrap them to the next line. This can be
done with either a row that wraps to another row, or a column that wraps to
another column.

Remember how much fun you had solving the card layout in this exercise?

[![flex-exercise-desired-outcome.png](https://i.postimg.cc/vZ81HMkB/flex-
exercise-desired-outcome.png)](https://github.com/TheOdinProject/css-
exercises/tree/main/flex/07-flex-layout-2)

We know that was a frustrating one, but it’s part of the point. While Flexbox
allows you to build a layout of rows and columns together, it isn’t always
easy.

But setting up a two-dimensional layout of cards would be much simpler using
CSS Grid:

See the Pen [ 2D Layout | CSS
Grid](https://codepen.io/TheOdinProjectExamples/pen/KKXwpZR) by TheOdinProject
([@TheOdinProjectExamples](https://codepen.io/TheOdinProjectExamples)) on
[CodePen](https://codepen.io).

### What is grid?

Although Grid is a newer module to CSS, this layout tool has long been in
development. Fun fact, CSS co-creator Dr. Bert Bos (no relation to Wes Bos)
started working on this layout model in 1996. The idea was inspired by the use
of grid-like layouts in other forms of media like newspapers and magazines.
After years of thorough demonstrations and development, CSS Grid was finally
introduced to all major browsers in 2017.

As shown above, Grid is often praised for easy placement of items in a two-
dimensional layout. But Grid can be used for one-dimensional layouts too. One
advantage for developers is if they start off with only one row of items, they
can simply add additional rows later.

You will notice a lot of similarities between Flex and Grid. Both use parent
containers with child items. They have similar property names for alignment
and positioning. But you will also come across a lot of differences between
the two and opinions on how each module should be used. For example, if you’ve
been struggling to get your Flex items to all match evenly in size, Grid can
make this type of layout much easier.

When reviewing older resources, keep in mind that differences between Flex and
Grid can also change as these modules get updated. One of the big highlights
for CSS Grid was the use of the `gap` property, which we will cover in the
next lesson. This used to only be available to Grid, but is now supported with
Flex too.

While some people thought CSS Grid was here to replace Flexbox, you will learn
by the end of these lessons that Grid is just another tool for the bag. In
fact, not only do each of these modules have their own use cases, but you will
also find it helpful to pair Flex and Grid together. But we’ll be covering all
of that in the concluding lesson. First you will learn how to actually make a
grid!

### Knowledge check

This section contains questions for you to check your understanding of this
lesson. If you’re having trouble answering the questions below on your own,
review the material above to find the answer.

  * How can you use Flex to make a two-dimensional layout?
  * Why was CSS Grid introduced?
  * Which CSS layout module would you use to easily make equal sized items in a container?

### Additional resources

This section contains helpful links to other content. It isn’t required, so
consider it supplemental.

  * Watch [Flexbox vs. CSS Grid — Which is Better?](https://www.youtube.com/watch?v=hs3piaN4b5I) for a visual representation of the use cases for Flexbox vs CSS Grid
  * Read CSS Tricks [quick take](https://css-tricks.com/quick-whats-the-difference-between-flexbox-and-grid/) on the differences between Flex and Grid
  * Check out [The Story of CSS Grid](https://alistapart.com/article/the-story-of-css-grid-from-its-creators/)

[ Improve on GitHub Github logo icon Improve on GitHub
](https://github.com/TheOdinProject/curriculum/edit/main/intermediate_html_css/grid/introduction_to_grid.md)
[ Report an issueReport icon Report an issue
](https://github.com/TheOdinProject/curriculum/issues/new?labels=Status%3A+Needs+Triage&lesson-
link=https%3A%2F%2Fwww.theodinproject.com%2Flessons%2Fnode-path-intermediate-
html-and-css-introduction-to-
grid&template=suggestion.yaml&title=Introduction+to+Grid%3A+%3CShort+description+of+your+suggestion%3E)

#### Lesson contents

[ View courseGo to course page View Course ](/paths/full-stack-
javascript/courses/intermediate-html-and-css) [Sign in to track
progress](/sign_in) [ Next lessonGo to next lesson Next Lesson
](/lessons/node-path-intermediate-html-and-css-creating-a-grid)

## Footer

# Support us!

## The Odin Project is funded by the community. Join us in empowering learners
around the globe by supporting The Odin Project!

[Learn more](/support_us) [ Donate now
](https://opencollective.com/theodinproject/donate?amount=5)

[ Odin Logo ](/)

High quality coding education maintained by an open source community.

[ GitHub GitHub GitHub logo ](https://github.com/TheOdinProject) [ Discord
Discord Discord logo ](https://discord.gg/fbFCkYabZB) [ Facebook Facebook
Facebook logo ](https://www.facebook.com/theodinproject/) [ Twitter Twitter
Twitter logo ](https://twitter.com/TheOdinProject)

### About us

  * [About](/about)
  * [Team](/team)
  * [Blog](/blog)
  * [Success Stories](/success_stories)

### Support

  * [FAQ](/faq)
  * [Contribute](/contributing)
  * [Contact us](/about#contact-us)

### Guides

  * [Community guides](/guides/community)
  * [Installation guides](/guides/installations)

### Legal

  * [Terms](/terms_of_use)
  * [Privacy](/privacy-policy)

(C) 2023 The Odin Project. All rights reserved.

